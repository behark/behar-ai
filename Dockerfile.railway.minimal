# Ultra-minimal Dockerfile optimized for Railway
# This version drastically reduces image size for Railway deployment

FROM python:3.11-slim AS builder

# Set build directory
WORKDIR /app

# Install build dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    gcc \
    python3-dev \
    && rm -rf /var/lib/apt/lists/*

# Copy only requirements file first to leverage Docker caching
COPY requirements.railway.txt .

# Create virtual environment and install dependencies
RUN python -m venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"
RUN pip install --no-cache-dir --upgrade pip wheel \
    && pip install --no-cache-dir -r requirements.railway.txt

# Multi-stage build for smaller final image
FROM python:3.11-slim

# Set working directory
WORKDIR /app

# Copy virtual environment from builder stage
COPY --from=builder /opt/venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# Copy only necessary files
COPY core/minimal_platform.py ./core/

# Create non-root user
RUN useradd -m -u 1000 appuser \
    && chown -R appuser:appuser /app \
    && mkdir -p /app/logs \
    && chown -R appuser:appuser /app/logs
USER appuser

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
  CMD curl -f http://localhost:${PORT:-8000}/health || exit 1

# Railway automatically sets PORT - use it with fallback
EXPOSE ${PORT:-8000}

# Start the application with Railway's PORT
CMD ["sh", "-c", "exec uvicorn core.minimal_platform:app --host 0.0.0.0 --port ${PORT:-8000}"]
